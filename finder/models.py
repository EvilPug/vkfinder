from django.db import models

from django.contrib.postgres.fields import *


class VkUsers(models.Model):
    id = models.IntegerField(primary_key=True)
    first_name = models.TextField(blank=True, null=True)
    last_name = models.TextField(blank=True, null=True)
    is_closed = models.BooleanField(blank=True, null=True)
    can_access_closed = models.BooleanField(blank=True, null=True)
    online = models.BooleanField(blank=True, null=True)
    online_app = models.IntegerField(blank=True, null=True)
    online_mobile = models.BooleanField(blank=True, null=True)
    deactivated = models.TextField(blank=True, null=True)
    sex = models.IntegerField(blank=True, null=True)
    nickname = models.TextField(blank=True, null=True)
    maiden_name = models.TextField(blank=True, null=True)
    domain = models.TextField(blank=True, null=True)
    screen_name = models.TextField(blank=True, null=True)
    bdate = models.TextField(blank=True, null=True)
    city_id = models.IntegerField(blank=True, null=True)
    city_title = models.TextField(blank=True, null=True)
    country_id = models.IntegerField(blank=True, null=True)
    country_title = models.TextField(blank=True, null=True)
    timezone = models.TextField(blank=True, null=True)
    group_list = ArrayField(models.IntegerField(), blank=True, null=True)
    subscripted_on_list = ArrayField(models.IntegerField(), blank=True, null=True)
    friend_list = ArrayField(models.IntegerField(), blank=True, null=True)
    audio_list = ArrayField(models.IntegerField(), blank=True, null=True)
    subs_list = ArrayField(models.IntegerField(), blank=True, null=True)
    photo_50 = models.TextField(blank=True, null=True)
    photo_100 = models.TextField(blank=True, null=True)
    photo_200 = models.TextField(blank=True, null=True)
    photo_200_orig = models.TextField(blank=True, null=True)
    photo_400_orig = models.TextField(blank=True, null=True)
    photo_max = models.TextField(blank=True, null=True)
    photo_max_orig = models.TextField(blank=True, null=True)
    photo_id = models.TextField(blank=True, null=True)
    has_photo = models.BooleanField(blank=True, null=True)
    has_mobile = models.BooleanField(blank=True, null=True)
    can_post = models.BooleanField(blank=True, null=True)
    can_see_all_posts = models.BooleanField(blank=True, null=True)
    can_see_audio = models.BooleanField(blank=True, null=True)
    can_write_private_message = models.BooleanField(blank=True, null=True)
    can_send_friend_request = models.BooleanField(blank=True, null=True)
    skype = models.TextField(blank=True, null=True)
    facebook = models.TextField(blank=True, null=True)
    facebook_name = models.TextField(blank=True, null=True)
    twitter = models.TextField(blank=True, null=True)
    instagram = models.TextField(blank=True, null=True)
    livejournal = models.TextField(blank=True, null=True)
    mobile_phone = models.TextField(blank=True, null=True)
    home_phone = models.TextField(blank=True, null=True)
    site = models.TextField(blank=True, null=True)
    status = models.TextField(blank=True, null=True)
    status_audio_artist = models.TextField(blank=True, null=True)
    status_audio_subtitle = models.TextField(blank=True, null=True)
    status_audio_id = models.TextField(blank=True, null=True)
    status_audio_album_id = models.TextField(blank=True, null=True)
    status_audio_is_explicit = models.BooleanField(blank=True, null=True)
    status_audio_is_focus_track = models.BooleanField(blank=True, null=True)
    status_audio_stories_allowed = models.BooleanField(blank=True, null=True)
    status_audio_owner_id = models.TextField(blank=True, null=True)
    status_audio_no_search = models.TextField(blank=True, null=True)
    status_audio_title = models.TextField(blank=True, null=True)
    status_audio_main_artists = models.TextField(blank=True, null=True)
    status_audio_featured_artists = models.TextField(blank=True, null=True)
    status_audio_duration = models.TextField(blank=True, null=True)
    status_audio_track_code = models.TextField(blank=True, null=True)
    status_audio_url = models.TextField(blank=True, null=True)
    status_audio_date = models.TextField(blank=True, null=True)
    status_audio_lyrics_id = models.TextField(blank=True, null=True)
    status_audio_genre_id = models.TextField(blank=True, null=True)
    last_seen_time = models.TextField(blank=True, null=True)
    last_seen_platform = models.TextField(blank=True, null=True)
    verified = models.BooleanField(blank=True, null=True)
    can_be_invited_group = models.BooleanField(blank=True, null=True)
    followers_count = models.TextField(blank=True, null=True)
    blacklisted = models.BooleanField(blank=True, null=True)
    blacklisted_by_me = models.BooleanField(blank=True, null=True)
    is_favorite = models.BooleanField(blank=True, null=True)
    is_hidden_from_feed = models.BooleanField(blank=True, null=True)
    common_count = models.IntegerField(blank=True, null=True)
    occupation_id = models.TextField(blank=True, null=True)
    occupation_type = models.TextField(blank=True, null=True)
    occupation_name = models.TextField(blank=True, null=True)
    career = models.TextField(blank=True, null=True)
    university = models.TextField(blank=True, null=True)
    faculty = models.IntegerField(blank=True, null=True)
    faculty_name = models.TextField(blank=True, null=True)
    graduation = models.TextField(blank=True, null=True)
    education_form = models.TextField(blank=True, null=True)
    education_status = models.TextField(blank=True, null=True)
    universities = models.TextField(blank=True, null=True)
    university_id = models.IntegerField(blank=True, null=True)
    university_name = models.TextField(blank=True, null=True)
    university_faculty = models.TextField(blank=True, null=True)
    university_faculty_name = models.TextField(blank=True, null=True)
    university_graduation = models.TextField(blank=True, null=True)
    home_town = models.TextField(blank=True, null=True)
    relation = models.TextField(blank=True, null=True)
    relation_partner_id = models.IntegerField(blank=True, null=True)
    relation_partner_first_name = models.TextField(blank=True, null=True)
    relation_partner_last_name = models.TextField(blank=True, null=True)
    personal_religion = models.TextField(blank=True, null=True)
    personal_political = models.TextField(blank=True, null=True)
    personal_langs = models.TextField(blank=True, null=True)
    personal_inspired_by = models.TextField(blank=True, null=True)
    personal_people_main = models.TextField(blank=True, null=True)
    personal_life_main = models.TextField(blank=True, null=True)
    personal_smoking = models.TextField(blank=True, null=True)
    personal_alcohol = models.TextField(blank=True, null=True)
    personal_religion_id = models.TextField(blank=True, null=True)
    interests = models.TextField(blank=True, null=True)
    music = models.TextField(blank=True, null=True)
    activities = models.TextField(blank=True, null=True)
    movies = models.TextField(blank=True, null=True)
    tv = models.TextField(blank=True, null=True)
    books = models.TextField(blank=True, null=True)
    games = models.TextField(blank=True, null=True)
    schools = models.TextField(blank=True, null=True)
    school_id = models.IntegerField(blank=True, null=True)
    school_country = models.TextField(blank=True, null=True)
    school_city = models.TextField(blank=True, null=True)
    school_name = models.TextField(blank=True, null=True)
    school_year_from = models.TextField(blank=True, null=True)
    school_year_to = models.TextField(blank=True, null=True)
    school_class = models.TextField(blank=True, null=True)
    about = models.TextField(blank=True, null=True)
    relatives = models.TextField(blank=True, null=True)
    quotes = models.TextField(blank=True, null=True)
    is_friend = models.BooleanField(blank=True, null=True)
    friend_status = models.TextField(blank=True, null=True)
    military = models.TextField(blank=True, null=True)
    status_audio_content_restricted = models.TextField(blank=True, null=True)


    class Meta:
        managed = False
        db_table = 'vk_users'


class VkGroups(models.Model):
    group_id = models.IntegerField(blank=True)
    name = models.TextField(blank=True, null=True)
    screen_name = models.TextField(blank=True, null=True)
    description = models.TextField(blank=True, null=True)
    members_count = models.IntegerField(blank=True, null=True)
    is_closed = models.BooleanField(blank=True)
    type = models.TextField(blank=True)
    photo_200 = models.TextField(blank=True)
    members_list = ArrayField(models.IntegerField(), blank=True, null=True)


    class Meta:
        managed = False
        db_table = 'vk_groups'
